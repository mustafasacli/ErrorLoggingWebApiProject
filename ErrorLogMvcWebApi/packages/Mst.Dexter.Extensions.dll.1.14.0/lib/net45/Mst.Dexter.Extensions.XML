<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mst.Dexter.Extensions</name>
    </assembly>
    <members>
        <member name="T:Mst.Dexter.Extensions.DbConnectionAnonymousOperator">
             <summary>
            
             </summary>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.GetParametersFromObject(System.Data.IDbConnection,System.Object)">
            <summary>
            Gets parameters from
            </summary>
            <param name="connection"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryExec(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction)">
             <summary>
            
             </summary>
             <param name="connection"></param>
             <param name="sql"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryScalar(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction)">
             <summary>
            
             </summary>
             <param name="connection"></param>
             <param name="sql"></param>
             <param name="obj"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryFirst``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="obj"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryLast``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="obj"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryList``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="obj"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionAnonymousOperator.QueryListSkipAndTake``1(System.Data.IDbConnection,System.String,System.Object,System.Data.CommandType,System.Data.IDbTransaction,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="obj"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension">
            <summary>   A Dx connection asynchronous operation extension. </summary>
            <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.ExecuteAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that executes the asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the execute. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.ExecuteReaderAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that executes the reader asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the execute reader. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.ExecuteScalarAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that executes the scalar asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the execute scalar. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.GetResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that gets result set asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.GetDynamicResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that gets dynamic result set asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.GetDynamicResultSetWithPagingAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.UInt32,System.UInt32)">
             <summary>
             An IDbConnection extension method that gets dynamic result set with paging asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
            
             <returns>   An asynchronous result that yields the dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.GetMultiDynamicResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that gets multi dynamic result set asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the multi dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.FirstAsDynamicAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that first as dynamic asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the first as dynamic. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.FirstAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that first asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields a T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.LastAsDynamicAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that last as dynamic asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields the last as dynamic. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.LastAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that last asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An asynchronous result that yields a T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtension.GetListAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="connection"></param>
            <param name="sqlText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <param name="inputParameters"></param>
            <param name="outputParameters"></param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2">
             <summary>   A Dx connection asynchronous operation extension. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.ExecuteAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that executes the asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the execute. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.ExecuteReaderAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that executes the reader asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the execute reader. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.ExecuteScalarAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that executes the scalar asynchronous operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the execute scalar. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.GetResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that gets result set asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.GetDynamicResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that gets dynamic result set asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.GetDynamicResultSetWithPagingAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.UInt32,System.UInt32,System.Object[])">
             <summary>
             An IDbConnection extension method that gets dynamic result set with paging asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
             <param name="parameters">       A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.GetMultiDynamicResultSetAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that gets multi dynamic result set asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the multi dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.FirstAsDynamicAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that first as dynamic asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the first as dynamic. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.FirstAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that first asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields a T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.LastAsDynamicAsync(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that last as dynamic asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields the last as dynamic. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.LastAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that last asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An asynchronous result that yields a T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionAsyncOperationExtensionV2.GetListAsync``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="connection"></param>
            <param name="sqlText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxConnectionOperationExtension">
             <summary>   A dx connection operation extension. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.Execute(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that executes. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.ExecuteReader(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Data.CommandBehavior})">
             <summary>   An IDbConnection extension method that executes the reader operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
             <param name="commandBehavior">CommandBehaviour for DataReader</param>
            
             <returns>   An IDataReader. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.ExecuteScalar(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that executes the scalar operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that gets result set of sql query. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   The DataSet object instance. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetDynamicResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that gets dynamic result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   The dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetDynamicResultSetWithPaging(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.UInt32,System.UInt32)">
             <summary>
             An IDbConnection extension method that gets dynamic result set with paging.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
            
             <returns>   The dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetMultiDynamicResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that gets multi dynamic result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   The multi dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.ExecuteScalarAs``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             An IDbConnection extension method that executes the scalar as operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.ExecuteAsLong(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that executes as long operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   A long. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.ExecuteAsDecimal(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that executes as decimal operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   A decimal. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.FirstAsDynamic(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that first as dynamic. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.First``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that firsts. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.LastAsDynamic(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that last as dynamic. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.Last``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   An IDbConnection extension method that lasts. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">       The connection to act on. </param>
             <param name="sqlText">          The SQL text. </param>
             <param name="commandType">      (Optional) Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="inputParameters">  (Optional) Options for controlling the input. </param>
             <param name="outputParameters"> (Optional) Options for controlling the output. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetList``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
            
             </summary>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <param name="inputParameters"></param>
             <param name="outputParameters"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetDynamicResultSetSkipAndTake(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="connection"></param>
             <param name="sql"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <param name="inputParameters"></param>
             <param name="outputParameters"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtension.GetListSkipAndTake``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="connection"></param>
             <param name="sqlText"></param>
             <param name="commandType"></param>
             <param name="transaction"></param>
             <param name="inputParameters"></param>
             <param name="outputParameters"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxConnectionExtension">
             <summary>   A dx connection extension. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.GetServerVersion(System.Data.IDbConnection)">
             <summary>   An IDbConnection extension method that gets server version. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="dbConnection"> The dbConnection to act on. </param>
            
             <returns>   The server version. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.GetConnectionStringBuilder(System.Data.IDbConnection)">
             <summary>   An IDbConnection extension method that gets connection string builder. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException"> Thrown when one or more required arguments are null. </exception>
            
             <param name="dbConnection"> The dbConnection to act on. </param>
            
             <returns>   The connection string builder. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.CloseIfNot(System.Data.IDbConnection)">
             <summary> An IDbConnection extension method that closes connection if not opened. </summary>
            
             <remarks> Msacli, 22.04.2019. </remarks>
            
             <param name="dbConnection"> The dbConnection to act on. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.OpenIfNot(System.Data.IDbConnection)">
             <summary>   An IDbConnection extension method that opens connection if not opened. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dbConnection"> The dbConnection to act on. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.OpenAndBeginTransaction(System.Data.IDbConnection,System.Nullable{System.Data.IsolationLevel})">
             <summary>   An IDbConnection extension method that opens and begin transaction. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dbConnection">     The dbConnection to act on. </param>
             <param name="isolationLevel">   (Optional) The isolation level. </param>
            
             <returns>   An IDbTransaction. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionExtension.GetParameterPrefix(System.Data.IDbConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2">
             <summary>   A dx connection operation extension v 2. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.Execute(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that executes. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.ExecuteReader(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that executes the reader operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An IDataReader. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.ExecuteScalar(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that executes the scalar operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.GetResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that gets result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   The result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.GetDynamicResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that gets dynamic result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   The dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.GetDynamicResultSetWithPaging(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.UInt32,System.UInt32,System.Object[])">
             <summary>
             An IDbConnection extension method that gets dynamic result set with paging.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">       The connection to act on. </param>
             <param name="sql">              The SQL. </param>
             <param name="commandType">      Type of the command. </param>
             <param name="transaction">      (Optional) The transaction. </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
             <param name="parameters">       A variable-length parameters list containing parameters. </param>
            
             <returns>   The dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.GetMultiDynamicResultSet(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that gets multi dynamic result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sql">          The SQL. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   The multi dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.ExecuteScalarAs``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>
             An IDbConnection extension method that executes the scalar as operation.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.ExecuteAsLong(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that executes as long operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   A long. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.ExecuteAsDecimal(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that executes as decimal operation. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   A decimal. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.FirstAsDynamic(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that first as dynamic. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.First``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that firsts. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.LastAsDynamic(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that last as dynamic. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.Last``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
             <summary>   An IDbConnection extension method that lasts. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="connection">   The connection to act on. </param>
             <param name="sqlText">      The SQL text. </param>
             <param name="commandType">  (Optional) Type of the command. </param>
             <param name="transaction">  (Optional) The transaction. </param>
             <param name="parameters">   A variable-length parameters list containing parameters. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxConnectionOperationExtensionV2.GetList``1(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDbTransaction,System.Object[])">
            <summary>
            Get List of model
            </summary>
            <param name="connection"></param>
            <param name="sqlText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <param name="parameters">DbParameter List</param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DataExtensions">
             <summary>   Description of DataExtensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.ToList``1(System.Data.DataTable,System.Boolean)">
             <summary>   This method returns A List of T object. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    T object type. </typeparam>
             <param name="datatable">            Datatble object. </param>
             <param name="accordingToColumn">    if it is true, returns a List with DataTable Columns else
                                                 returns a List with PropertyInfo of object. </param>
            
             <returns>   Returns A List of T object. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetPageOfDataTable(System.Data.DataTable,System.Int32,System.Int32)">
             <summary>   A DataTable extension method that gets page of data table. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.NullReferenceException">   Thrown when a value was unexpectedly null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="dt">           DataTable object. </param>
             <param name="pageNumber">   The page number. </param>
             <param name="rowCount">     Number of rows. </param>
            
             <returns>   The page of data table. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetColumnsOfDataTable(System.Data.DataTable,System.String[])">
             <summary>   Returns a DataTable with Selected column names. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">           DataTable object. </param>
             <param name="columnList">   column names array. </param>
            
             <returns>   Returns a DataTable with Selected column names. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetColumnsOfDataTable(System.Data.DataTable,System.Int32[])">
             <summary>   Returns a DataTable with Selected column numbers. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">           DataTable object. </param>
             <param name="columnList">   column numbers array. </param>
            
             <returns>   Returns a DataTable with Selected column numbers. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetObjectWithSelectedColumn(System.Data.DataTable,System.String,System.Object,System.String)">
             <summary>   Returns a object with given parameters. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">                   DataTable object. </param>
             <param name="refColumn">            Name of Reference Column. </param>
             <param name="refValue">             Value of Reference Column. </param>
             <param name="destinationColumn">    Name of Destination Column. </param>
            
             <returns>
             Returns a object at destination column which contains reference value at reference column.
             Otherwise return null.
             </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.ExportAsExcelWithIncludeColumns(System.Data.DataTable,System.String,System.Object[])">
             <summary>
             A DataTable extension method that export as excel with ınclude columns.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">               DataTable object. </param>
             <param name="fileName">         Filename of the file. </param>
             <param name="includeColumns">   A variable-length parameters list containing include columns. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.ExportAsExcelWithExcludeColumns(System.Data.DataTable,System.String,System.Object[])">
             <summary>
             A DataTable extension method that export as excel with exclude columns.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">               DataTable object. </param>
             <param name="fileName">         Filename of the file. </param>
             <param name="excludeColumns">   A variable-length parameters list containing exclude columns. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.Copy(System.Data.DataTable)">
             <summary>   A DataTable extension method that copies the given dt. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">   DataTable object. </param>
            
             <returns>   A DataTable. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetSomeColumnsAsTable(System.Data.DataTable,System.String[])">
             <summary>   A DataTable extension method that gets some columns as table. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dt">           DataTable object. </param>
             <param name="columnList">   column names array. </param>
            
             <returns>   some columns as table. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.RowToObject``1(System.Data.DataRow,System.Data.DataColumnCollection)">
             <summary>   A DataRow extension method that row to object. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">Thrown when one or more required arguments are null.</exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="row">      The row to act on. </param>
             <param name="columns">  (Optional) The columns. </param>
            
             <returns>   A T instance. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.GetColumnAsUniqueList``1(System.Data.DataTable,System.String)">
             <summary>   A DataTable extension method that gets column as unique list. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.ArgumentException">        Thrown when one or more arguments have
                                                         unsupported or illegal values. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="dataTable">    The dataTable to act on. </param>
             <param name="columnName">   Name of the column. </param>
            
             <returns>   The column as unique list. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataExtensions.ToDynamicList(System.Data.DataTable)">
             <summary>   A DataTable extension method that converts a table to a dynamic list. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="table">    The table to act on. </param>
            
             <returns>   Table as a List&lt;ExpandoObject&gt; </returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DataReaderAsyncExtensions">
             <summary>   A data reader asynchronous extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderAsyncExtensions.FirstRowAsync(System.Data.IDataReader)">
             <summary>   An IDataReader extension method that first row asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dataReader">   The dataReader to act on. </param>
            
             <returns>   An asynchronous result that yields the first row. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderAsyncExtensions.LastRowAsync(System.Data.IDataReader)">
             <summary>   An IDataReader extension method that last row asynchronous. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dataReader">   The dataReader to act on. </param>
            
             <returns>   An asynchronous result that yields the last row. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderAsyncExtensions.GetDynamicResultSetAsync(System.Data.IDataReader,System.Boolean)">
             <summary>   Bind IDataReader content to ExpandoObject list. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="reader">       . </param>
             <param name="closeAtFinal"> (Optional) </param>
            
             <returns>   Returns ExpandoObject object list. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderAsyncExtensions.GetDynamicResultSetWithPagingAsync(System.Data.IDataReader,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             An IDataReader extension method that gets dynamic result set with paging asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="reader">           . </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
             <param name="closeAtFinal">     (Optional) </param>
            
             <returns>   An asynchronous result that yields the dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderAsyncExtensions.GetMultiDynamicResultSetAsync(System.Data.IDataReader)">
             <summary>
             An IDataReader extension method that gets multi dynamic result set asynchronous.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="reader">   . </param>
            
             <returns>   An asynchronous result that yields the multi dynamic result set. </returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DataReaderExtensions">
             <summary>   A data reader extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.CloseIfNot(System.Data.IDataReader)">
             <summary>   An IDataReader extension method that closes if not. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dataReader">   The dataReader to act on. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.FirstRow(System.Data.IDataReader)">
             <summary>   An IDataReader extension method that first row. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="dataReader">   The dataReader to act on. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.LastRow(System.Data.IDataReader)">
             <summary>   An IDataReader extension method that last row. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="dataReader">   The dataReader to act on. </param>
            
             <returns>   An ExpandoObject. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.GetDynamicResultSet(System.Data.IDataReader,System.Boolean)">
             <summary>   Bind IDataReader content to ExpandoObject list. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="reader">       . </param>
             <param name="closeAtFinal"> (Optional) </param>
            
             <returns>   Returns ExpandoObject object list. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.GetDynamicResultSetWithPaging(System.Data.IDataReader,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             An IDataReader extension method that gets dynamic result set with paging.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="reader">           . </param>
             <param name="pageNumber">       (Optional) The page number. </param>
             <param name="pageItemCount">    (Optional) Number of page ıtems. </param>
             <param name="closeAtFinal">     (Optional) </param>
            
             <returns>   The dynamic result set with paging. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.GetMultiDynamicResultSet(System.Data.IDataReader,System.Boolean)">
             <summary>   An IDataReader extension method that gets multi dynamic result set. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="reader">       . </param>
             <param name="closeAtFinal"> (Optional) </param>
            
             <returns>   The multi dynamic result set. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.GetDynamicFromDataReader(System.Data.IDataReader)">
             <summary>   Gets dynamic from data reader. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dataReader">   The dataReader to act on. </param>
            
             <returns>   The dynamic from data reader. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DataReaderExtensions.GetDynamicResultSetSkipAndTake(System.Data.IDataReader,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Get Expando List with skip and take options.
            </summary>
            <param name="reader"></param>
            <param name="skip"></param>
            <param name="take"></param>
            <param name="closeAtFinal"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionTypeBuilder.GetDbConnectionType(System.Data.IDbConnection)">
            <summary>
            Gets Connection Type
            </summary>
            <param name="connection">Connection instance</param>
            <returns>returns DbConnectionTypes enum.</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DbConnectionTypeBuilder.GetDbConnectionType``1(``0)">
            <summary>
            Gets Connection Type
            </summary>
            <typeparam name="T">DbConnection class.</typeparam>
            <param name="connection">Connection instance</param>
            <returns>returns DbConnectionTypes enum.</returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.ObjectExtensions.EnumExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtensions.EnumExtensions.GetDayName(System.DayOfWeek)">
            <summary>
            Gets Day Name of CurrentCulture.
            </summary>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtensions.EnumExtensions.GetDayName(System.DayOfWeek,System.String)">
            <summary>
            Gets Day Name of given CurrentCulture.
            </summary>
            <param name="dayOfWeek"></param>
            <param name="culture">culture name</param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtensions.XmlExtension.GetNodesAsDynamic(System.Xml.XmlNodeList)">
            <summary>
            Get xml nodes as expando object list.
            </summary>
            <param name="nodeList"></param>
            <returns>expando object list</returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.Objects.DbConnectionTypes">
             <summary>   Values that represent Database connection types. </summary>
            
             <remarks>   Mustafa SAÇLI, 4.05.2019. </remarks>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.Sql">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.Oracle">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.PostgreSql">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.DB2">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.Odbc">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.Oledb">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.MySql">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.FireBird">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SQLite">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.VistaDB">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlBase">
             <summary>
            
             </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlOdbc">
            <summary>   An enum constant representing the Sql odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlOledb">
            <summary>   An enum constant representing the Sql oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.OracleOdbc">
            <summary>   An enum constant representing the Oracle odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.OracleOledb">
            <summary>   An enum constant representing the Oracle oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.PostgreSqlOdbc">
            <summary>   An enum constant representing the PostgreSql odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.PostgreSqlOledb">
            <summary>   An enum constant representing the PostgreSql oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.DB2Odbc">
            <summary>   An enum constant representing the DB2 odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.DB2Oledb">
            <summary>   An enum constant representing the DB2 oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.MySqlOdbc">
            <summary>   An enum constant representing the MySql odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.MySqlOledb">
            <summary>   An enum constant representing the MySql oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.FirebirdOdbc">
            <summary>   An enum constant representing the Firebird odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.FirebirdOledb">
            <summary>   An enum constant representing the Firebird oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlBaseOdbc">
            <summary>   An enum constant representing the SQL base odbc option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlBaseOledb">
            <summary>   An enum constant representing the SQL base oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SynergyOdbc">
            <summary>   An enum constant representing the synergy ODBC option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SynergyOledb">
            <summary>   An enum constant representing the synergy oledb option. </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.NuoDb">
            <summary>
             An enum constant representing the nuo db= 130 option. http://www.nuodb.com/
            </summary>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.DbConnectionTypes.SqlDatabase">
            <summary>
             An enum constant representing the SQL database= 131 option. SQLDATABASE.NET,
             http://sqldatabase.net/
            </summary>
        </member>
        <member name="T:Mst.Dexter.Extensions.Objects.MstDictionary">
             <summary>   MstDictionary. This class cannot be inherited. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
        </member>
        <member name="F:Mst.Dexter.Extensions.Objects.MstDictionary.dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   Constructor. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="dict">   The dictionary. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
             <summary>   Constructor. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="dict">   The dictionary. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.#ctor(System.Dynamic.ExpandoObject)">
             <summary>   Constructor. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="expando">  The expando. </param>
        </member>
        <member name="P:Mst.Dexter.Extensions.Objects.MstDictionary.Item(System.String)">
             <summary>   Gets or sets the element with the specified key. </summary>
            
             <param name="key">  The key of the element to get or set. </param>
            
             <returns>   The element with the specified key. </returns>
        </member>
        <member name="P:Mst.Dexter.Extensions.Objects.MstDictionary.Count">
             <summary>   Gets the number of.  </summary>
            
             <value> The count. </value>
        </member>
        <member name="P:Mst.Dexter.Extensions.Objects.MstDictionary.IsReadOnly">
             <summary>   Gets a value indicating whether the ıs read only. </summary>
            
             <value> True if ıs read only, false if not. </value>
        </member>
        <member name="P:Mst.Dexter.Extensions.Objects.MstDictionary.Keys">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <value>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the
             object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </value>
        </member>
        <member name="P:Mst.Dexter.Extensions.Objects.MstDictionary.Values">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in
             the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <value>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the
             object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </value>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>
             Adds an element with the provided key and value to the
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="item"> The item to remove. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Add(System.String,System.Object)">
             <summary>
             Adds an element with the provided key and value to the
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="key">      The object to use as the key of the element to add. </param>
             <param name="value">    The object to use as the value of the element to add. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Clear">
             <summary>   Clears this object to its blank/initial state. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>   Query if this object contains the given item. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="item"> The item to remove. </param>
            
             <returns>   True if the object is in this collection, false if not. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.ContainsKey(System.String)">
             <summary>
             Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an
             element with the specified key.
             </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="key">  The key to locate in the
                                 <see cref="T:System.Collections.Generic.IDictionary`2" />. </param>
            
             <returns>
             true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element
             with the key; otherwise, false.
             </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
             <summary>   Copies to. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="array">        The array. </param>
             <param name="arrayIndex">   The array ındex. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.GetEnumerator">
             <summary>   Gets the enumerator. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <returns>   The enumerator. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
             <summary>
             Removes the element with the specified key from the
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="item"> The item to remove. </param>
            
             <returns>
             true if the element is successfully removed; otherwise, false.  This method also returns
             false if <paramref name="key" /> was not found in the original
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.Remove(System.String)">
             <summary>
             Removes the element with the specified key from the
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="key">  The key of the element to remove. </param>
            
             <returns>
             true if the element is successfully removed; otherwise, false.  This method also returns
             false if <paramref name="key" /> was not found in the original
             <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.TryGetValue(System.String,System.Object@)">
             <summary>   Gets the value associated with the specified key. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <param name="key">      The key whose value to get. </param>
             <param name="value">    [out] When this method returns, the value associated with the
                                     specified key, if the key is found; otherwise, the default value for the
                                     type of the <paramref name="value" /> parameter. This parameter is passed
                                     uninitialized. </param>
            
             <returns>
             true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />
             contains an element with the specified key; otherwise, false.
             </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.System#Collections#IEnumerable#GetEnumerator">
             <summary>   Gets the enumerator. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <returns>   The enumerator. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.Objects.MstDictionary.AsDictionary">
             <summary>   Gets the content. </summary>
            
             <remarks>   Msacli, 7.05.2019. </remarks>
            
             <returns>   The content. </returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DictionaryExtensions">
             <summary>   A dictionary extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DictionaryExtensions.GetValueOrDefault``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,``0)">
             <summary>
             An IDictionary&lt;string,T&gt; extension method that gets value or default.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException"> Thrown when one or more required arguments are null. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="dictionary">   The dictionary to act on. </param>
             <param name="key">          The key. </param>
             <param name="defaultValue"> The default value. </param>
            
             <returns>   The value or default. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DictionaryExtensions.DictionaryToList(System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             A Dictionary&lt;string,string&gt; extension method that dictionary to list.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="dictionary">   The dictionary to act on. </param>
            
             <returns>   A List&lt;string&gt; </returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.DxDbCommandHelper">
             <summary>   A dx database command helper. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxDbCommandHelper.SetCommandParameters(System.Data.IDbCommand,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>   creates parameters and sets their values of IDbCommand. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="command">          . </param>
             <param name="inputParameters">  (Optional) </param>
             <param name="outputParameters"> (Optional) </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxDbCommandHelper.SetCommandParameters(System.Data.IDbCommand,System.Object[])">
             <summary>   Sets parameters of DbCommand. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="command">      Db command. </param>
             <param name="parameters">   Db Command Parameters. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxDbCommandHelper.GetOutParametersOfCommand(System.Data.IDbCommand)">
             <summary>   Get Output Values of IDbCommand. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="command">  . </param>
            
             <returns>   The out parameters of command. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DxDbCommandHelper.SetOracleCommandBindByName(System.Data.IDbCommand,System.Boolean)">
            <summary>
            Set OracleCommand BindByName with given value.
            </summary>
            <param name="dbCommand">Db command</param>
            <param name="bindByName">BindByName property value.</param>
        </member>
        <member name="T:Mst.Dexter.Extensions.DynamicExtensions">
             <summary>   A dynamic extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ConvertToInstance``1(System.Dynamic.ExpandoObject)">
            <summary>
            Convert dynamic object to new T object instance.
            </summary>
            <typeparam name="T">Generic type parameter. .</typeparam>
            <param name="expandoObject">The dyn to act on. .</param>
            <returns>to converted. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ConvertTo``1(System.Object)">
            <summary>
            Convert dynamic object to new T object instance.
            </summary>
            <typeparam name="T">Generic type parameter. .</typeparam>
            <param name="dynamicObject">The dyn to act on. .</param>
            <returns>to converted. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ConvertToV2``1(System.Dynamic.ExpandoObject)">
            <summary>
            Convert dynamic object to new T object instance.
            </summary>
            <typeparam name="T">Generic type parameter. .</typeparam>
            <param name="expandoObject">The dyn to act on. .</param>
            <returns>The given data converted to a v 2. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ConvertToList``1(System.Collections.Generic.List{System.Dynamic.ExpandoObject})">
            <summary>
            A List&lt;ExpandoObject&gt; extension method that converts a dynList to a list.
            </summary>
            <typeparam name="T">Generic type parameter. .</typeparam>
            <param name="expandoObjectList">The dynList to act on. .</param>
            <returns>The given data converted to a list. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.GetValue(System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Gets Value from expandoobject with given key.
            </summary>
            <param name="expandoObject">The expandoObject to act on. .</param>
            <param name="key">The key. .</param>
            <returns>The value. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.SetValue(System.Dynamic.ExpandoObject,System.String,System.Object)">
            <summary>
            Set the value of expando object instance with given parameters.
            </summary>
            <param name="expandoObject">The expandoObject to act on. .</param>
            <param name="key">The key. .</param>
            <param name="value">The value. .</param>
            <returns>True if it succeeds, false if it fails. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ConvertToList``1(System.Collections.Generic.List{System.Object})">
            <summary>
            A List&lt;ExpandoObject&gt; extension method that converts a dynList to a list.
            </summary>
            <typeparam name="T">Generic type parameter. .</typeparam>
            <param name="dynamicObjectList">The dynList to act on. .</param>
            <returns>The given data converted to a list. .</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.DynamicExtensions.ToExpando(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Extension method that turns a dictionary of string and object to an ExpandoObject
            </summary>
        </member>
        <member name="T:Mst.Dexter.Extensions.GeneralMapperExtensions">
             <summary>   A general mapper extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.GeneralMapperExtensions.Map``2(``0)">
             <summary>   A TSource extension method that maps the given source. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="TSource">  Type of the source. </typeparam>
             <typeparam name="TDest">    Type of the destination. </typeparam>
             <param name="source">   The source to act on. </param>
            
             <returns>   A TDest. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GeneralMapperExtensions.MapTo``2(``0,``1)">
            <summary>
            Map Property Values to another type instance.
            </summary>
            <typeparam name="TSource">Source Generic Type</typeparam>
            <typeparam name="TDest">Destination Generic Type</typeparam>
            <param name="source">Source generic type instance</param>
            <param name="instance">Destination generic type instance</param>
        </member>
        <member name="T:Mst.Dexter.Extensions.GenericExtensions">
             <summary>   A generic extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.IsMember``1(``0,``0[])">
             <summary>   A T extension method that query if 't' ıs member. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
             <param name="tArr"> A variable-length parameters list containing array. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.IsDifferent``1(``0,``0)">
             <summary>   A T extension method that query if 't1' ıs different. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t1">   The t1 to act on. </param>
             <param name="t2">   The second T. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetValidProperties``1(``0)">
             <summary>   A T extension method that gets valid properties. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   An array of property İnformation. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetProperties``1(``0)">
             <summary>   A T extension method that gets the properties. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   The properties. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetColumnsReverse``1(``0)">
             <summary>   A T extension method that gets columns reverse. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   The columns reverse. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetColumns``1(``0)">
             <summary>   A T extension method that gets the columns. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   The columns. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetKey``1(``0,System.Boolean)">
             <summary>   A T extension method that gets a key. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">                The t to act on. </param>
             <param name="isFirstPropKey">   (Optional) True if is first property key, false if not. </param>
            
             <returns>   The key. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetTableName``1(``0)">
             <summary>   A T extension method that gets table name. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   The table name. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetSchemaName``1(``0)">
             <summary>   A T extension method that gets schema name. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">    The t to act on. </param>
            
             <returns>   The schema name. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetPropValue``1(``0,System.String)">
             <summary>   A T extension method that gets property value. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">        The t to act on. </param>
             <param name="propName"> Name of the property. </param>
            
             <returns>   The property value. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.SetPropValue``1(``0,System.String,System.Object)">
             <summary>   A T extension method that sets property value. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="t">        The t to act on. </param>
             <param name="propName"> Name of the property. </param>
             <param name="value">    The value. </param>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.IsNotNullOrDefault``1(``0)">
            <summary>
            if instance is null or default returns false else returns true.
            </summary>
            <typeparam name="T">Generic Type</typeparam>
            <param name="instance">Generic Type instance</param>
            <returns>if instance is null or default returns false else returns true.</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.GetPropertyValue``1(``0,System.String)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="t"></param>
             <param name="propertyName"></param>
             <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.GenericExtensions.SetPropertyValue``1(``0,System.String,System.Object)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="t"></param>
             <param name="propertyName"></param>
             <param name="value"></param>
        </member>
        <member name="T:Mst.Dexter.Extensions.ObjectExtension">
             <summary>   An object extension. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.IsNull(System.Object)">
             <summary>   An object extension method that query if 'o' is null. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="o">    The o to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.IsNullOrDbNull(System.Object)">
             <summary>
             An object extension method that query if 'obj' is null or database null.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToStr(System.Object)">
             <summary>   An object extension method that converts an obj to a string. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as a string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToInt(System.Object)">
             <summary>   An object extension method that converts an obj to a int. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToByteNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a byte nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an byte? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToShortNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a short nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an short? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToIntNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a int nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an int? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToLongNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a long nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an long? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToDecimalNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a decimal nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an decimal? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToDoubleNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a double nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an double? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToFloatNullable(System.Object)">
             <summary>   An object extension method that converts an obj to a float nullable. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as an float? </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToDecimal(System.Object)">
             <summary>   An object extension method that converts an obj to a decimal. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as a decimal. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.Char2Int(System.Char)">
             <summary>   A char extension method that character 2 int. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="ch">   The ch to act on. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.IsNullOrEmpty(System.String)">
             <summary>   A string extension method that query if 'str' is null or empty. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.IsNullOrSpace(System.String)">
             <summary>   A string extension method that query if 'str' is null or space. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.GetValueWithCheckDbNull(System.Object)">
            <summary>
            if value is DbNulll.Value returns null, else return object value.
            </summary>
            <param name="obj"></param>
            <returns>Returns object</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.ObjectExtension.ToDateTimeNullable(System.Object)">
            <summary>
            Convert object to DateTime nullable.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.StringExtension">
             <summary>   A string extension. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.IsValid(System.String)">
             <summary>   A string extension method that query if 's' ıs valid. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="s">    The s to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.Len(System.String)">
             <summary>   A string extension method that lengths the given s. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="s">    The s to act on. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.TrimAll(System.String)">
             <summary>   A string extension method that trim all. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="s">    The s to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.FirstIndexOf(System.String,System.Char)">
             <summary>   A string extension method that first ındex of. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
             <param name="ch">   The ch. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.RemoveUnderLineAndCapitalizeString(System.String)">
             <summary>
             A string extension method that removes the under line and capitalize string described by
             str removes underline and point.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.CapitalizeEndPart(System.String,System.String)">
             <summary>   A string extension method that capitalize end part. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">      The str to act on. </param>
             <param name="endPart">  The end part. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.CapitalizeString(System.String)">
             <summary>   A string extension method that capitalize string. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.RemoveSpaces(System.String)">
             <summary>   A string extension method that removes the spaces described by str. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.RemoveChars(System.String,System.Char[])">
             <summary>   A string extension method that removes the characters. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="str">      The str to act on. </param>
             <param name="chars">    A variable-length parameters list containing characters. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.FirstCharToUpper(System.String)">
             <summary>   A string extension method that first character to upper. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="input">    The input to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.FirstCharToLower(System.String)">
             <summary>   A string extension method that first character to lower. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="input">    The input to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.UppercaseFirst(System.String)">
             <summary>   A string extension method that uppercase first. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="s">    The s to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.RemovewithDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.StringExtension.RemoveTurkishChars(System.String)">
            <summary>
            The RemoveTurkishChars
            </summary>
            <param name="s">The s<see cref="T:System.String"/></param>
            <returns>The <see cref="T:System.String"/></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.TypeExtensions">
             <summary>   A type extensions. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.IsSimpleType(System.Type)">
             <summary>
             Determine whether a type is simple (String, Decimal, DateTime, etc)
             or complex (i.e. custom class with public properties and methods). source code:
             https://gist.github.com/jonathanconway/3330614.
             </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.IsSimpleTypeV2(System.Type)">
             <summary>   A Type extension method that query if 'type' ıs simple type v 2. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.ToDbType(System.Type)">
             <summary>   A Type extension method that converts a type to a database type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   Type as a DbType. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.ToDbType(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetColumnsOfTypeAsReverse(System.Type)">
             <summary>   A Type extension method that gets columns of type as reverse. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The columns of type as reverse. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetKeyOfType(System.Type)">
             <summary>   A Type extension method that gets key of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The key of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetIdentityPropertyOfType(System.Type)">
             <summary>   A Type extension method that gets ıdentity property of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The ıdentity property of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetKeyColumnOfType(System.Type)">
             <summary>   A Type extension method that gets key column of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The key column of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetPropertyColumnOfType(System.Type,System.String)">
             <summary>   A Type extension method that gets property column of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="type">         The type to act on. </param>
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   The property column of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetTableNameOfType(System.Type)">
             <summary>   A Type extension method that gets table name of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The table name of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetSchemaNameOfType(System.Type)">
             <summary>   A Type extension method that gets schema name of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The schema name of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetColumnsOfType(System.Type,System.Boolean)">
             <summary>   A Type extension method that gets columns of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
             <param name="includeNotMappedProperties">if true NotMapped Properties are included, else not.</param>
            
             <returns>   The columns of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetColumnsReverseOfType(System.Type)">
             <summary>   A Type extension method that gets columns reverse of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The columns reverse of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.IsKeyColumnNumeric(System.Type)">
             <summary>   A Type extension method that query if 'type' ıs key column numeric. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetValidPropertiesOfType(System.Type,System.Boolean)">
             <summary>   A Type extension method that gets valid properties of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
             <param name="includeNotMappedProperties">if true NotMapped Properties are included, else not.</param>
            
             <returns>   An array of property İnformation. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetValidPropertiesOfTypeV2(System.Type)">
             <summary>   A Type extension method that gets valid properties of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   An array of property İnformation. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetPropertyTypesOfType(System.Type)">
             <summary>   A Type extension method that gets property types of type. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The property types of type. </returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetSameProperties(System.Type,System.Type)">
            <summary>
            Gets common Properties of two types.
            </summary>
            <param name="type1">First type</param>
            <param name="type2">Second type</param>
            <returns>returns string list</returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.IsAnonymousType(System.Type)">
            <summary>
            check type is anonymous
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.CheckIfAnonymousType(System.Type)">
            <summary>
            check type is anonymous
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetColumnNameOfProperty(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeExtensions.GetKeysOfType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Mst.Dexter.Extensions.TypeHelper">
             <summary>   A type helper. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
        </member>
        <member name="M:Mst.Dexter.Extensions.TypeHelper.IsNumeric(System.Type)">
             <summary>   Query if 'type' is numeric. </summary>
            
             <remarks>   Msacli, 22.04.2019. </remarks>
            
             <param name="type"> The type. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
    </members>
</doc>
